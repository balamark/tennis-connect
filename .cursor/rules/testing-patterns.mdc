---
description: 
globs: 
alwaysApply: false
---
# Testing Patterns and Commands

## Windows Command Prompt Requirements

**Use Windows Command Prompt for ALL commands. If any command fails after 3 attempts, pipe to temporary file and read result.**

### PowerShell Syntax (Current Environment):
- Use `;` for command chaining: `cd frontend; npm test`
- Use `>` for all output redirection: `command *> file.txt`
- Use `Get-Content file.txt` or `type file.txt` to read files
- Use `Out-File` for complex redirections

### CMD Syntax (Alternative):
- Use `&&` for command chaining: `cd frontend && npm test`
- Use `>` for output redirection: `command > file.txt 2>&1`
- Use `type filename.txt` to read file contents



## Test Coverage Requirements

**If there is no coverage for the production code logic, make sure to add test.**
- Every new feature or bug fix must include corresponding tests
- Authentication flows must be tested
- Error handling paths must be covered
- API integration points need tests
- Edge cases and failure scenarios should be tested

## Test File Structure

Test files should be located in:
- [frontend/src/components/__tests__/](mdc:frontend/src/components/__tests__)

## Testing Best Practices

1. **Use specific test names** - Be descriptive about what each test verifies
2. **Test user interactions** - Use fireEvent for clicks, changes, etc.
3. **Test edge cases** - Include regression tests for known issues
```






