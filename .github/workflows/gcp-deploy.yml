name: Build and Deploy to Google Cloud Platform

# This workflow deploys Tennis Connect to:
# - Google Cloud Run (Backend & Frontend)
# - Google Artifact Registry (Docker Images)  
# - Supabase (PostgreSQL Database)

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1  # Change this to your preferred region
  SERVICE_BACKEND: tennis-connect-backend
  SERVICE_FRONTEND: tennis-connect-frontend
  REGION: us-central1

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

      - name: Build and Push Backend Docker Image
        run: |
          cd backend
          docker build -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/tennis-connect/$SERVICE_BACKEND:$GITHUB_SHA .
          docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/tennis-connect/$SERVICE_BACKEND:$GITHUB_SHA

      - name: Build and Push Frontend Docker Image
        run: |
          cd frontend
          docker build \
            --target production \
            --build-arg REACT_APP_API_URL=https://$SERVICE_BACKEND-${{ secrets.GCP_PROJECT_ID }}.a.run.app/api \
            --build-arg REACT_APP_ENV=production \
            -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/tennis-connect/$SERVICE_FRONTEND:$GITHUB_SHA .
          docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/tennis-connect/$SERVICE_FRONTEND:$GITHUB_SHA

      - name: Deploy Backend to Cloud Run
        id: deploy-backend
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_BACKEND }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/tennis-connect/${{ env.SERVICE_BACKEND }}:${{ github.sha }}
          env_vars: |
            APP_ENV=production
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=5432
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=postgres
            DB_SSLMODE=require
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_EXPIRATION=30
            PORT=8080
          flags: |
            --allow-unauthenticated
            --memory=512Mi
            --cpu=1
            --port=8080
            --max-instances=10

      - name: Deploy Frontend to Cloud Run
        id: deploy-frontend
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_FRONTEND }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/tennis-connect/${{ env.SERVICE_FRONTEND }}:${{ github.sha }}
          flags: |
            --allow-unauthenticated
            --memory=256Mi
            --cpu=1
            --port=80
            --max-instances=5

      - name: Show Output
        run: |
          echo "Backend URL: ${{ steps.deploy-backend.outputs.url }}"
          echo "Frontend URL: ${{ steps.deploy-frontend.outputs.url }}" 