version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:14-alpine
    container_name: tennis-connect-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-tennis_connect}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tennis-connect-api
    restart: always
    depends_on:
      - db
    environment:
      - APP_ENV=${APP_ENV:-development}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-tennis_connect}
      - DB_SSLMODE=${DB_SSLMODE:-disable}
      - SERVER_PORT=8080
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-60}
    ports:
      - "${BACKEND_PORT:-8080}:8080"

  # Frontend React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tennis-connect-web
    restart: always
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT:-80}:80"

volumes:
  postgres_data: 